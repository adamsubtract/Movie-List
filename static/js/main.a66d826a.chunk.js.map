{"version":3,"sources":["services/fakeGenreService.js","services/fakeMovieService.js","components/common/pagination.jsx","components/common/listGroup.jsx","components/common/like.jsx","components/common/tableHeader.jsx","components/common/tableBody.jsx","components/common/table.jsx","components/moviesTable.jsx","components/movies.jsx","utils/paginate.js","App.js","serviceWorker.js","index.js"],"names":["genres","_id","name","movies","title","genre","numberInStock","dailyRentalRate","publishDate","liked","Pagination","props","itemsCount","pageSize","currentPage","onPageChange","pagesCount","Math","ceil","pages","_","range","react_default","a","createElement","className","map","page","key","onClick","ListGroup","items","textProperty","valueProperty","onItemSelect","selectedItem","item","defaultProps","Like","classes","style","cursor","aria-hidden","TableHeader","raiseSort","path","sortColumn","Object","objectSpread","_this","order","onSort","renderSortIcon","column","_this2","this","columns","label","Component","TableBody","renderCell","content","get","createKey","_this$props","data","Table","_ref","tableHeader","tableBody","MoviesTable","movie","like","onLike","onDelete","table","Movies","state","handleDelete","filter","m","setState","handleLike","toConsumableArray","index","indexOf","handlePageChange","handleGenreSelect","selectedGenre","handleSort","getPageData","_this$state","allMovies","filtered","pageNumber","startIndex","slice","take","value","paginate","orderBy","totalCount","length","concat","g","count","_this$state2","_this$getPageData","listGroup","moviesTable","pagination","App","components_movies","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4QAAaA,EAAS,CACpB,CAAEC,IAAK,2BAA4BC,KAAM,UACzC,CAAED,IAAK,2BAA4BC,KAAM,UACzC,CAAED,IAAK,2BAA4BC,KAAM,aCD3C,IAAMC,EAAS,CACb,CACEF,IAAK,2BACLG,MAAO,aACPC,MAAO,CAAEJ,IAAK,2BAA4BC,KAAM,UAChDI,cAAe,EACfC,gBAAiB,IACjBC,YAAa,2BACbC,OAAO,GAET,CACER,IAAK,2BACLG,MAAO,WACPC,MAAO,CAAEJ,IAAK,2BAA4BC,KAAM,UAChDI,cAAe,EACfC,gBAAiB,KAEnB,CACEN,IAAK,2BACLG,MAAO,UACPC,MAAO,CAAEJ,IAAK,2BAA4BC,KAAM,YAChDI,cAAe,EACfC,gBAAiB,KAEnB,CACEN,IAAK,2BACLG,MAAO,gBACPC,MAAO,CAAEJ,IAAK,2BAA4BC,KAAM,UAChDI,cAAe,EACfC,gBAAiB,KAEnB,CACEN,IAAK,2BACLG,MAAO,WACPC,MAAO,CAAEJ,IAAK,2BAA4BC,KAAM,UAChDI,cAAe,EACfC,gBAAiB,KAEnB,CACEN,IAAK,2BACLG,MAAO,mBACPC,MAAO,CAAEJ,IAAK,2BAA4BC,KAAM,UAChDI,cAAe,EACfC,gBAAiB,KAEnB,CACEN,IAAK,2BACLG,MAAO,YACPC,MAAO,CAAEJ,IAAK,2BAA4BC,KAAM,YAChDI,cAAe,EACfC,gBAAiB,KAEnB,CACEN,IAAK,2BACLG,MAAO,kBACPC,MAAO,CAAEJ,IAAK,2BAA4BC,KAAM,YAChDI,cAAe,EACfC,gBAAiB,KAEnB,CACEN,IAAK,2BACLG,MAAO,eACPC,MAAO,CAAEJ,IAAK,2BAA4BC,KAAM,UAChDI,cAAe,EACfC,gBAAiB,0BC9BNG,EAhCI,SAAAC,GAAS,IAClBC,EAAoDD,EAApDC,WAAYC,EAAwCF,EAAxCE,SAAUC,EAA8BH,EAA9BG,YAAaC,EAAiBJ,EAAjBI,aAErCC,EAAaC,KAAKC,KAAKN,EAAaC,GAC1C,GAAmB,IAAfG,EAAkB,OAAO,KAC7B,IAAMG,EAAQC,IAAEC,MAAM,EAAGL,EAAa,GAEtC,OACEM,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACXN,EAAMO,IAAI,SAAAC,GAAI,OACbL,EAAAC,EAAAC,cAAA,MACEI,IAAKD,EACLF,UAAWE,IAASb,EAAc,mBAAqB,aAEvDQ,EAAAC,EAAAC,cAAA,KAAGC,UAAU,YAAYI,QAAS,kBAAMd,EAAaY,KAClDA,SClBf,IAAMG,EAAY,SAAAnB,GAAS,IAEvBoB,EAKEpB,EALFoB,MACAC,EAIErB,EAJFqB,aACAC,EAGEtB,EAHFsB,cACAC,EAEEvB,EAFFuB,aACAC,EACExB,EADFwB,aAEF,OACEb,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACXM,EAAML,IAAI,SAAAU,GAAI,OACbd,EAAAC,EAAAC,cAAA,MACEK,QAAS,kBAAMK,EAAaE,IAC5BR,IAAKQ,EAAKH,GACVR,UACEW,IAASD,EAAe,yBAA2B,mBAGpDC,EAAKJ,QAOhBF,EAAUO,aAAe,CACvBL,aAAc,OACdC,cAAe,OAGFH,QCjBAQ,EAbF,SAAA3B,GACX,IAAI4B,EAAU,cAEd,OADK5B,EAAMF,QAAO8B,GAAW,MAE3BjB,EAAAC,EAAAC,cAAA,KACEK,QAASlB,EAAMkB,QACfW,MAAO,CAAEC,OAAQ,WACjBhB,UAAWc,EACXG,cAAY,UC+BHC,6MAtCbC,UAAY,SAAAC,GACV,IAAMC,EAAUC,OAAAC,EAAA,EAAAD,CAAA,GAAQE,EAAKtC,MAAMmC,YAC/BA,EAAWD,OAASA,EACtBC,EAAWI,MAA6B,QAArBJ,EAAWI,MAAkB,OAAS,OAEzDJ,EAAWD,KAAOA,EAClBC,EAAWI,MAAQ,OAErBD,EAAKtC,MAAMwC,OAAOL,MAGpBM,eAAiB,SAAAC,GAAU,IACjBP,EAAeG,EAAKtC,MAApBmC,WAER,OAAIO,EAAOR,OAASC,EAAWD,KAAa,KACnB,QAArBC,EAAWI,MAAwB5B,EAAAC,EAAAC,cAAA,KAAGC,UAAU,mBAC7CH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,6FAGb,IAAA6B,EAAAC,KACP,OACEjC,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACG+B,KAAK5C,MAAM6C,QAAQ9B,IAAI,SAAA2B,GAAM,OAC5B/B,EAAAC,EAAAC,cAAA,MACEC,UAAU,YACVG,IAAKyB,EAAOR,MAAQQ,EAAOzB,IAC3BC,QAAS,kBAAMyB,EAAKV,UAAUS,EAAOR,QAEpCQ,EAAOI,MALV,IAKkBH,EAAKF,eAAeC,eA9BxBK,aC+BXC,6MA7BbC,WAAa,SAACxB,EAAMiB,GAClB,OAAIA,EAAOQ,QAAgBR,EAAOQ,QAAQzB,GAEnChB,IAAE0C,IAAI1B,EAAMiB,EAAOR,SAG5BkB,UAAY,SAAC3B,EAAMiB,GACjB,OAAOjB,EAAKnC,KAAOoD,EAAOR,MAAQQ,EAAOzB,8EAGlC,IAAA0B,EAAAC,KAAAS,EACmBT,KAAK5C,MAAvBsD,EADDD,EACCC,KAAMT,EADPQ,EACOR,QAEd,OACElC,EAAAC,EAAAC,cAAA,aACGyC,EAAKvC,IAAI,SAAAU,GAAI,OACZd,EAAAC,EAAAC,cAAA,MAAII,IAAKQ,EAAKnC,KACXuD,EAAQ9B,IAAI,SAAA2B,GAAM,OACjB/B,EAAAC,EAAAC,cAAA,MAAII,IAAK0B,EAAKS,UAAU3B,EAAMiB,IAC3BC,EAAKM,WAAWxB,EAAMiB,iBApBfK,aCUTQ,EATD,SAAAC,GAA2C,IAAxCX,EAAwCW,EAAxCX,QAASV,EAA+BqB,EAA/BrB,WAAYK,EAAmBgB,EAAnBhB,OAAQc,EAAWE,EAAXF,KAC5C,OACE3C,EAAAC,EAAAC,cAAA,SAAOC,UAAU,SACfH,EAAAC,EAAAC,cAAC4C,EAAD,CAAaZ,QAASA,EAASV,WAAYA,EAAYK,OAAQA,IAC/D7B,EAAAC,EAAAC,cAAC6C,EAAD,CAAWb,QAASA,EAASS,KAAMA,MC6C1BK,6MAhDbd,QAAU,CACR,CAAEX,KAAM,QAASY,MAAO,SACxB,CAAEZ,KAAM,aAAcY,MAAO,SAC7B,CAAEZ,KAAM,gBAAiBY,MAAO,SAChC,CAAEZ,KAAM,kBAAmBY,MAAO,QAClC,CACE7B,IAAK,OACLiC,QAAS,SAAAU,GAAK,OACZjD,EAAAC,EAAAC,cAACgD,EAAD,CAAM/D,MAAO8D,EAAM9D,MAAOoB,QAAS,kBAAMoB,EAAKtC,MAAM8D,OAAOF,QAG/D,CACE3C,IAAK,SACLiC,QAAS,SAAAU,GAAK,OACZjD,EAAAC,EAAAC,cAAA,UACEK,QAAS,kBAAMoB,EAAKtC,MAAM+D,SAASH,IACnC9C,UAAU,qBAFZ,eAUNmB,UAAY,SAAAC,GACV,IAAMC,EAAUC,OAAAC,EAAA,EAAAD,CAAA,GAAQE,EAAKtC,MAAMmC,YAC/BA,EAAWD,OAASA,EACtBC,EAAWI,MAA6B,QAArBJ,EAAWI,MAAkB,OAAS,OAEzDJ,EAAWD,KAAOA,EAClBC,EAAWI,MAAQ,OAErBD,EAAKtC,MAAMwC,OAAOL,4EAGX,IAAAkB,EACgCT,KAAK5C,MAApCR,EADD6D,EACC7D,OAAQ2C,EADTkB,EACSlB,WAAYK,EADrBa,EACqBb,OAC5B,OACE7B,EAAAC,EAAAC,cAACmD,EAAD,CACEnB,QAASD,KAAKC,QACdS,KAAM9D,EACN2C,WAAYA,EACZK,OAAQA,WA3CUO,aCuGXkB,6MAjGbC,MAAQ,CACN1E,OAAQ,GACRH,OAAQ,GACRc,YAAa,EACbD,SAAU,EACViC,WAAY,CAAED,KAAM,QAASK,MAAO,UAQtC4B,aAAe,SAAAP,GACb,IAAMpE,EAAS8C,EAAK4B,MAAM1E,OAAO4E,OAAO,SAAAC,GAAC,OAAIA,EAAE/E,MAAQsE,EAAMtE,MAC7DgD,EAAKgC,SAAS,CAAE9E,cAGlB+E,WAAa,SAAAX,GACX,IAAMpE,EAAM4C,OAAAoC,EAAA,EAAApC,CAAOE,EAAK4B,MAAM1E,QACxBiF,EAAQjF,EAAOkF,QAAQd,GAC7BpE,EAAOiF,GAAPrC,OAAAC,EAAA,EAAAD,CAAA,GAAqB5C,EAAOiF,IAC5BjF,EAAOiF,GAAO3E,OAASN,EAAOiF,GAAO3E,MACrCwC,EAAKgC,SAAS,CAAE9E,cAGlBmF,iBAAmB,SAAA3D,GACjBsB,EAAKgC,SAAS,CAAEnE,YAAaa,OAG/B4D,kBAAoB,SAAAlF,GAClB4C,EAAKgC,SAAS,CAAEO,cAAenF,EAAOS,YAAa,OAGrD2E,WAAa,SAAA3C,GACXG,EAAKgC,SAAS,CAAEnC,kBAGlB4C,YAAc,WAAM,IAAAC,EAOd1C,EAAK4B,MALPhE,EAFgB8E,EAEhB9E,SACAC,EAHgB6E,EAGhB7E,YACQ8E,EAJQD,EAIhBxF,OACAqF,EALgBG,EAKhBH,cACA1C,EANgB6C,EAMhB7C,WAGI+C,EACJL,GAAiBA,EAAcvF,IAC3B2F,EAAUb,OAAO,SAAAC,GAAC,OAAIA,EAAE3E,MAAMJ,MAAQuF,EAAcvF,MACpD2F,EAIAzF,EC9DH,SAAkB4B,EAAO+D,EAAYjF,GAC1C,IAAMkF,GAAcD,EAAa,GAAKjF,EACtC,OAAOO,IAAEW,GACNiE,MAAMD,GACNE,KAAKpF,GACLoF,KAAKpF,GACLqF,QDwDcC,CAFA/E,IAAEgF,QAAQP,EAAU,CAAC/C,EAAWD,MAAO,CAACC,EAAWI,QAElCpC,EAAaD,GAE7C,MAAO,CAAEwF,WAAYR,EAASS,OAAQrC,KAAM9D,uFA/C5C,IAAMH,EAAM,CAAI,CAAEC,IAAK,GAAIC,KAAM,eAArBqG,OAAAxD,OAAAoC,EAAA,EAAApC,CTZP/C,EAAO+E,OAAO,SAAAyB,GAAC,OAAIA,MSaxBjD,KAAK0B,SAAS,CAAE9E,ORmDXA,EQnDgCH,4CAiD9B,IACSyG,EAAUlD,KAAKsB,MAAM1E,OAA7BmG,OADDI,EAEuCnD,KAAKsB,MAA3ChE,EAFD6F,EAEC7F,SAAUC,EAFX4F,EAEW5F,YAAagC,EAFxB4D,EAEwB5D,WAE/B,GAAc,IAAV2D,EAAa,OAAOnF,EAAAC,EAAAC,cAAA,iDAJjB,IAAAmF,EAM8BpD,KAAKmC,cAAlCW,EANDM,EAMCN,WAAkBlG,EANnBwG,EAMa1C,KAEpB,OACE3C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAACoF,EAAD,CACE7E,MAAOwB,KAAKsB,MAAM7E,OAClBmC,aAAcoB,KAAKsB,MAAMW,cACzBtD,aAAcqB,KAAKgC,qBAGvBjE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,oBAAY6E,EAAZ,4BACA/E,EAAAC,EAAAC,cAACqF,EAAD,CACE1G,OAAQA,EACR2C,WAAYA,EACZ2B,OAAQlB,KAAK2B,WACbR,SAAUnB,KAAKuB,aACf3B,OAAQI,KAAKkC,aAEfnE,EAAAC,EAAAC,cAACsF,EAAD,CACElG,WAAYyF,EACZxF,SAAUA,EACVC,YAAaA,EACbC,aAAcwC,KAAK+B,4BA1FV5B,mBEGNqD,MARf,WACE,OACEzF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aACdH,EAAAC,EAAAC,cAACwF,EAAD,QCKcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,uECVNC,IAASC,OAAOjG,EAAAC,EAAAC,cAACgG,EAAD,MAASC,SAASC,eAAe,SDyH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.a66d826a.chunk.js","sourcesContent":["export const genres = [\n  { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n  { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n  { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" }\n];\n\nexport function getGenres() {\n  return genres.filter(g => g);\n}\n","import * as genresAPI from \"./fakeGenreService\";\n\nconst movies = [\n  {\n    _id: \"5b21ca3eeb7f6fbccd471815\",\n    title: \"Terminator\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 6,\n    dailyRentalRate: 2.5,\n    publishDate: \"2018-01-03T19:04:28.809Z\",\n    liked: true\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471816\",\n    title: \"Die Hard\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 5,\n    dailyRentalRate: 2.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471817\",\n    title: \"Get Out\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 8,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471819\",\n    title: \"Trip to Italy\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181a\",\n    title: \"Airplane\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181b\",\n    title: \"Wedding Crashers\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181e\",\n    title: \"Gone Girl\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 7,\n    dailyRentalRate: 4.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181f\",\n    title: \"The Sixth Sense\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 4,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471821\",\n    title: \"The Avengers\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5\n  }\n];\n\nexport function getMovies() {\n  return movies;\n}\n\nexport function getMovie(id) {\n  return movies.find(m => m._id === id);\n}\n\nexport function saveMovie(movie) {\n  let movieInDb = movies.find(m => m._id === movie._id) || {};\n  movieInDb.name = movie.name;\n  movieInDb.genre = genresAPI.genres.find(g => g._id === movie.genreId);\n  movieInDb.numberInStock = movie.numberInStock;\n  movieInDb.dailyRentalRate = movie.dailyRentalRate;\n\n  if (!movieInDb._id) {\n    movieInDb._id = Date.now();\n    movies.push(movieInDb);\n  }\n\n  return movieInDb;\n}\n\nexport function deleteMovie(id) {\n  let movieInDb = movies.find(m => m._id === id);\n  movies.splice(movies.indexOf(movieInDb), 1);\n  return movieInDb;\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport _ from \"lodash\";\n\nconst Pagination = props => {\n  const { itemsCount, pageSize, currentPage, onPageChange } = props;\n\n  const pagesCount = Math.ceil(itemsCount / pageSize);\n  if (pagesCount === 1) return null;\n  const pages = _.range(1, pagesCount + 1);\n\n  return (\n    <nav>\n      <ul className=\"pagination\">\n        {pages.map(page => (\n          <li\n            key={page}\n            className={page === currentPage ? \"page-item active\" : \"page-item\"}\n          >\n            <a className=\"page-link\" onClick={() => onPageChange(page)}>\n              {page}\n            </a>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n};\n\nPagination.propTypes = {\n  itemsCount: PropTypes.number.isRequired,\n  pageSize: PropTypes.number.isRequired,\n  currentPage: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired\n};\n\nexport default Pagination;\n","import React from \"react\";\n\nconst ListGroup = props => {\n  const {\n    items,\n    textProperty,\n    valueProperty,\n    onItemSelect,\n    selectedItem\n  } = props;\n  return (\n    <ul className=\"list-group\">\n      {items.map(item => (\n        <li\n          onClick={() => onItemSelect(item)}\n          key={item[valueProperty]}\n          className={\n            item === selectedItem ? \"list-group-item active\" : \"list-group-item\"\n          }\n        >\n          {item[textProperty]}\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nListGroup.defaultProps = {\n  textProperty: \"name\",\n  valueProperty: \"_id\"\n};\n\nexport default ListGroup;\n","import React from \"react\";\n\nconst Like = props => {\n  let classes = \"fa fa-heart\";\n  if (!props.liked) classes += \"-o\";\n  return (\n    <i\n      onClick={props.onClick}\n      style={{ cursor: \"pointer\" }}\n      className={classes}\n      aria-hidden=\"true\"\n    />\n  );\n};\n\nexport default Like;\n","import React, { Component } from \"react\";\n\nclass TableHeader extends Component {\n  raiseSort = path => {\n    const sortColumn = { ...this.props.sortColumn };\n    if (sortColumn.path === path)\n      sortColumn.order = sortColumn.order === \"asc\" ? \"desc\" : \"acs\";\n    else {\n      sortColumn.path = path;\n      sortColumn.order = \"asc\";\n    }\n    this.props.onSort(sortColumn);\n  };\n\n  renderSortIcon = column => {\n    const { sortColumn } = this.props;\n\n    if (column.path !== sortColumn.path) return null;\n    if (sortColumn.order === \"asc\") return <i className=\"fa fa-sort-asc\" />;\n    return <i className=\"fa fa-sort-desc\" />;\n  };\n\n  render() {\n    return (\n      <thead>\n        <tr>\n          {this.props.columns.map(column => (\n            <th\n              className=\"clickable\"\n              key={column.path || column.key}\n              onClick={() => this.raiseSort(column.path)}\n            >\n              {column.label} {this.renderSortIcon(column)}\n            </th>\n          ))}\n        </tr>\n      </thead>\n    );\n  }\n}\n\nexport default TableHeader;\n","import React, { Component } from \"react\";\nimport _ from \"lodash\";\n\nclass TableBody extends Component {\n  renderCell = (item, column) => {\n    if (column.content) return column.content(item);\n\n    return _.get(item, column.path);\n  };\n\n  createKey = (item, column) => {\n    return item._id + (column.path || column.key);\n  };\n\n  render() {\n    const { data, columns } = this.props;\n\n    return (\n      <tbody>\n        {data.map(item => (\n          <tr key={item._id}>\n            {columns.map(column => (\n              <td key={this.createKey(item, column)}>\n                {this.renderCell(item, column)}\n              </td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    );\n  }\n}\n\nexport default TableBody;\n","import React from \"react\";\nimport TableHeader from \"./tableHeader\";\nimport TableBody from \"./tableBody\";\n\nconst Table = ({ columns, sortColumn, onSort, data }) => {\n  return (\n    <table className=\"table\">\n      <TableHeader columns={columns} sortColumn={sortColumn} onSort={onSort} />\n      <TableBody columns={columns} data={data} />\n    </table>\n  );\n};\n\nexport default Table;\n","import React, { Component } from \"react\";\nimport Like from \"./common/like\";\nimport Table from \"./common/table\";\n\nclass MoviesTable extends Component {\n  columns = [\n    { path: \"title\", label: \"Title\" },\n    { path: \"genre.name\", label: \"Genre\" },\n    { path: \"numberInStock\", label: \"Stock\" },\n    { path: \"dailyRentalRate\", label: \"Rate\" },\n    {\n      key: \"Like\",\n      content: movie => (\n        <Like liked={movie.liked} onClick={() => this.props.onLike(movie)} />\n      )\n    },\n    {\n      key: \"delete\",\n      content: movie => (\n        <button\n          onClick={() => this.props.onDelete(movie)}\n          className=\"btn-danger btn-sm\"\n        >\n          Delete\n        </button>\n      )\n    }\n  ];\n\n  raiseSort = path => {\n    const sortColumn = { ...this.props.sortColumn };\n    if (sortColumn.path === path)\n      sortColumn.order = sortColumn.order === \"asc\" ? \"desc\" : \"acs\";\n    else {\n      sortColumn.path = path;\n      sortColumn.order = \"asc\";\n    }\n    this.props.onSort(sortColumn);\n  };\n\n  render() {\n    const { movies, sortColumn, onSort } = this.props;\n    return (\n      <Table\n        columns={this.columns}\n        data={movies}\n        sortColumn={sortColumn}\n        onSort={onSort}\n      />\n    );\n  }\n}\n\nexport default MoviesTable;\n","import React, { Component } from \"react\";\nimport { getMovies } from \"../services/fakeMovieService\";\nimport Pagination from \"./common/pagination\";\nimport { paginate } from \"../utils/paginate\";\nimport ListGroup from \"./common/listGroup\";\nimport { getGenres } from \"../services/fakeGenreService\";\nimport MoviesTable from \"./moviesTable\";\nimport _ from \"lodash\";\n\nclass Movies extends Component {\n  state = {\n    movies: [],\n    genres: [],\n    currentPage: 1,\n    pageSize: 4,\n    sortColumn: { path: \"title\", order: \"asc\" }\n  };\n\n  componentDidMount() {\n    const genres = [{ _id: \"\", name: \"All Genres\" }, ...getGenres()];\n    this.setState({ movies: getMovies(), genres });\n  }\n\n  handleDelete = movie => {\n    const movies = this.state.movies.filter(m => m._id !== movie._id);\n    this.setState({ movies });\n  };\n\n  handleLike = movie => {\n    const movies = [...this.state.movies];\n    const index = movies.indexOf(movie);\n    movies[index] = { ...movies[index] };\n    movies[index].liked = !movies[index].liked;\n    this.setState({ movies });\n  };\n\n  handlePageChange = page => {\n    this.setState({ currentPage: page });\n  };\n\n  handleGenreSelect = genre => {\n    this.setState({ selectedGenre: genre, currentPage: 1 });\n  };\n\n  handleSort = sortColumn => {\n    this.setState({ sortColumn });\n  };\n\n  getPageData = () => {\n    const {\n      pageSize,\n      currentPage,\n      movies: allMovies,\n      selectedGenre,\n      sortColumn\n    } = this.state;\n\n    const filtered =\n      selectedGenre && selectedGenre._id\n        ? allMovies.filter(m => m.genre._id === selectedGenre._id)\n        : allMovies;\n\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\n\n    const movies = paginate(sorted, currentPage, pageSize, allMovies);\n\n    return { totalCount: filtered.length, data: movies };\n  };\n\n  render() {\n    const { length: count } = this.state.movies;\n    const { pageSize, currentPage, sortColumn } = this.state;\n\n    if (count === 0) return <p>There are no movies in the datatbase</p>;\n\n    const { totalCount, data: movies } = this.getPageData();\n\n    return (\n      <div className=\"row\">\n        <div className=\"col-3\">\n          <ListGroup\n            items={this.state.genres}\n            selectedItem={this.state.selectedGenre}\n            onItemSelect={this.handleGenreSelect}\n          />\n        </div>\n        <div className=\"col\">\n          <p>Showing {totalCount} movies in the database.</p>\n          <MoviesTable\n            movies={movies}\n            sortColumn={sortColumn}\n            onLike={this.handleLike}\n            onDelete={this.handleDelete}\n            onSort={this.handleSort}\n          />\n          <Pagination\n            itemsCount={totalCount}\n            pageSize={pageSize}\n            currentPage={currentPage}\n            onPageChange={this.handlePageChange}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Movies;\n","import _ from \"lodash\";\n\nexport function paginate(items, pageNumber, pageSize) {\n  const startIndex = (pageNumber - 1) * pageSize;\n  return _(items)\n    .slice(startIndex)\n    .take(pageSize)\n    .take(pageSize)\n    .value();\n}\n","import React from \"react\";\nimport Movies from \"./components/movies\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <main className=\"container\">\n      <Movies />\n    </main>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"font-awesome/css/font-awesome.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}